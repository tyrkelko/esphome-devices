esphome:
  name: esp-attic-temperature
  platform: ESP8266
  board: esp01_1m

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  password: !secret esp-01-multifunction-ota-password


wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: 10.100.102.55
    gateway: 10.100.102.1
    subnet: 255.255.255.0
  reboot_timeout: 120s

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "esp-attic-temperature"
    password: !secret esp-attic-temperature-ap-password 


captive_portal:


i2c:
  sda: GPIO2
  scl: GPIO0
  scan: True

sensor:
  - platform: bme280
    temperature:
      name: "Temperature at office"
      oversampling: 16x
      id: temperature_at_office
    pressure:
      name: "Pressure 01"
      id: preasure_01
    humidity:
      name: "Humidity 01"
      id: humidity_01
    address: 0x76
    update_interval: 60s

time:
  - platform: homeassistant
    id: esptime

font:
  - file: 'arial.ttf'
    id: font1
    size: 48
  - file: 'arial.ttf'
    id: font2
    size: 14
  - file: 'arial.ttf'
    id: font3
    size: 18

animation:
  - file: "images/ac_cool.gif"
    id: ac_cool
  - file: "images/ac_auto.gif"
    id: ac_auto
  - file: "images/ac_dry.gif"
    id: ac_dry
  - file: "images/ac_fan.gif"
    id: ac_fan
  - file: "images/ac_heat.gif"
    id: ac_heat
  - file: "images/ac_heat_up.gif"
    id: ac_heat_up
  - file: "images/ac_cool_down.gif"
    id: ac_cool_down
image:
  - file: "images/ac_off.bmp"
    id: ac_off

display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x64"
    address: 0x3C

    lambda: |- 
      static int current_temperature;
      static int previous_temperature;
      static int animation_temperature_up = 0;
      static int animation_temperature_down = 0;
      current_temperature = round(id(temperature_at_office).state);
      if (current_temperature > previous_temperature) animation_temperature_up = 1;
      if (current_temperature < previous_temperature) animation_temperature_down = 1;
      // Print A/C state
      switch (id(climate_01).mode) {
        case 0: it.image(0, 0, id(ac_off)); 
          break;
        case 1: id(ac_auto).next_frame(); 
          it.image(0, 0, id(ac_auto)); 
          break;
        case 2: id(ac_cool).next_frame(); 
          it.image(0, 0, id(ac_cool), COLOR_ON, COLOR_OFF); 
          break;
        case 3: id(ac_heat).next_frame(); 
          it.image(0, 0, id(ac_heat)); 
          break;
        case 4: id(ac_fan).next_frame(); 
          it.image(0, 0, id(ac_fan)); 
          break;
        case 5: id(ac_dry).next_frame(); 
          it.image(0, 0, id(ac_dry)); 
          break;
        default: it.image(0, 0, id(ac_off));
      }
      // Print target temperature
      if (id(climate_01).mode > 0) {
        id(toggle_ac_mode) = id(climate_01).mode;
        it.printf(26, 18, id(font2), TextAlign::BASELINE_LEFT , "%.0f°C", id(climate_01).target_temperature);
      } else {
        it.printf(26, 18, id(font2), TextAlign::BASELINE_LEFT , "OFF");
      }
      // Print inside temperature (from homeassistant sensor)
      if (animation_temperature_up > 0) {
        it.image(64, 0, id(ac_heat_up));
        id(ac_heat_up).next_frame();
        animation_temperature_up++;
        animation_temperature_up = animation_temperature_up % 9;
      } else if (animation_temperature_down > 0) {
        it.image(64, 0, id(ac_cool_down));
        id(ac_cool_down).next_frame();
        animation_temperature_down++;
        animation_temperature_down = animation_temperature_down % 9;
      } else if (id(temperature_at_office).has_state()) {
        it.printf(76, 18, id(font3), TextAlign::BASELINE_LEFT , "%.0f°C", id(temperature_at_office).state);
      }
      // Print time
      it.strftime(0, 60, id(font1), TextAlign::BASELINE_LEFT, "%H:%M", id(esptime).now());
      previous_temperature = current_temperature;
        
remote_transmitter:
  pin: GPIO3
  carrier_duty_percent: 50%

climate:
  - platform: coolix
    name: "Office A/C"
    sensor: temperature_at_office
    id: climate_01
# Individual switches
switch:
  - platform: template
    name: "Electra A/C LED 01"
    turn_on_action:
      - remote_transmitter.transmit_raw:
          code: [ 4407, -4375, 538, -1600, 538, -556, 539, -1601, 536, -1600, 538, -557, 538, -1601, 538, -558, 537, -1600, 538, -556, 538, -1600, 538, -557, 538, -557, 538, -1599, 539, -556, 538, -1601, 539, -556, 537, -1601, 539, -1600, 537, -1600, 538, 
                  -1600, 546, -550, 539, -1599, 538, -558, 538, -1601, 538, -556, 538, -555, 539, -556, 539, -557, 539, -1599, 536, -559, 538, -1600, 538, -556, 539, -1599, 539, -556, 538, -1601, 538, -556, 539, -556, 539, -1600, 539, -555, 539, -1599, 538, -559, 537, 
                  -1600, 539, -556, 538, -1599, 538, -1601, 538, -556, 539, -1599, 539, -556, 539, -5208, 4380, -4367, 539, -1597, 539, -557, 538, -1599, 539, -1600, 538, -556, 538, -1601, 539, -555, 539, -1600, 538, -559, 536, -1601, 539, -555, 538, -558, 539, -1599, 
                  538, -555, 539, -1599, 539, -557, 538, -1601, 538, -1600, 537, -1600, 539, -1600, 537, -556, 538, -1599, 540, -556, 538, -1599, 539, -557, 538, -557, 538, -556, 539, -555, 539, -1600, 538, -557, 539, -1598, 539, -557, 537, -1601, 536, -559, 537, -1600, 
                  538, -557, 539, -555, 538, -1599, 539, -558, 538, -1598, 540, -555, 539, -1599, 538, -557, 539, -1598, 538, -1601, 538, -557, 539, -1599, 539, -556, 539]
          carrier_frequency: 38kHz
  - platform: template
    name: "Electra A/C 25 Cold 01"
    turn_on_action:
      - remote_transmitter.transmit_raw:
          code: [ 4432, -4371, 541, -1598, 538, -556, 541, -1595, 542, -1597, 540, -554, 542, -553, 540, -1596, 543, -553, 541, -554, 541, -1596, 541, -554, 541, -553, 542, -1599, 540, -1597, 540, -553, 541, -1596, 541, -1597, 541, -554, 541, -553, 541, 
                  -1597, 541, -1597, 541, -1595, 541, -1597, 540, -1598, 542, -552, 542, -1596, 541, -1596, 541, -553, 541, -554, 541, -553, 539, -556, 541, -553, 540, -1597, 541, -1596, 541, -554, 541, -553, 539, -557, 541, -554, 541, -552, 540, -555, 540, -555, 541, 
                  -555, 542, -1594, 542, -1596, 540, -1598, 540, -1596, 542, -1595, 542, -1595, 541, -5206, 4382, -4365, 541, -1594, 542, -555, 541, -1596, 541, -1595, 542, -553, 542, -553, 541, -1597, 541, -553, 543, -552, 541, -1597, 541, -554, 541, -554, 541, -1597, 
                  541, -1595, 541, -554, 542, -1596, 541, -1596, 542, -554, 542, -553, 542, -1597, 540, -1597, 541, -1596, 542, -1596, 542, -1597, 540, -554, 541, -1597, 542, -1596, 542, -554, 541, -553, 542, -552, 541, -552, 542, -555, 541, -1595, 547, -1591, 541, 
                  -555, 540, -554, 542, -553, 541, -552, 542, -554, 541, -553, 540, -554, 542, -553, 541, -1597, 541, -1596, 540, -1596, 541, -1597, 542, -1601, 537, -1595, 541]
          carrier_frequency: 38kHz    
  - platform: template
    name: "Electra A/C Off 01"
    turn_on_action:
      - remote_transmitter.transmit_raw:
          code: [ 4410, -4372, 569, -1568, 569, -526, 567, -1569, 569, -1570, 569, -527, 568, -526, 542, -1595, 569, -527, 567, -526, 569, -1569, 569, -525, 569, -525, 568, -1571, 567, -1570, 569, -525, 569, -1569, 568, -526, 568, -1569, 569, -1567, 569, 
                  -1568, 569, -1569, 569, -525, 542, -1596, 569, -1568, 569, -1569, 568, -527, 568, -527, 542, -552, 568, -525, 569, -1569, 569, -526, 568, -525, 570, -1567, 542, -1596, 568, -1569, 542, -551, 567, -528, 542, -552, 569, -526, 569, -525, 569, -525, 544, 
                  -552, 542, -552, 568, -1568, 569, -1569, 569, -1567, 568, -1569, 569, -1568, 569, -5177, 4411, -4336, 570, -1567, 569, -527, 568, -1569, 569, -1569, 569, -527, 568, -525, 569, -1570, 568, -526, 568, -526, 568, -1569, 570, -525, 570, -525, 569, -1568, 
                  570, -1567, 570, -525, 571, -1566, 571, -523, 571, -1566, 572, -1566, 572, -1565, 571, -1565, 572, -523, 571, -1567, 572, -1565, 572, -1567, 572, -522, 571, -522, 572, -525, 570, -524, 570, -1567, 571, -525, 570, -525, 570, -1566, 571, -1567, 571, 
                  -1568, 570, -524, 572, -523, 571, -524, 570, -526, 569, -524, 570, -524, 569, -526, 568, -527, 568, -1569, 569, -1567, 569, -1569, 569, -1568, 542, -1596, 569]
          carrier_frequency: 38kHz  
  - platform: template
    name: "PILOT TV On/Off 01"
    turn_on_action:
      - remote_transmitter.transmit_raw:
          code: [ 9064, -4478, 590, -519, 616, -520, 557, -578, 588, -521, 614, -519, 559, -577, 589, -1655, 558, -576, 590, -1654, 558, -1687, 615, -1655, 587, -1655, 559, -1687, 591, -1677, 590, -519, 617, -1652, 591, -520, 615, -1654, 589, -521, 615, 
                  -519, 558, -1685, 617, -518, 559, -576, 589, -521, 615, -1653, 591, -520, 615, -1653, 591, -1653, 559, -577, 589, -1654, 559, -1685, 615, -1655, 588]
          carrier_frequency: 50kHz
      - remote_transmitter.transmit_raw:
          code: [9064, -2209, 615]
          carrier_frequency: 50kHz

binary_sensor:
  - platform: gpio
    pin: GPIO1
    name: "Toggle office A/C"
    filters:
      delayed_on_off: 100ms
    on_click: 
      lambda: |-
        auto call = id(climate_01).make_call();
        if (id(climate_01).mode == 0) {
          call.set_mode(id(toggle_ac_mode));
        } else {
          call.set_mode("OFF");
        }
        call.perform();

globals:
  - id: toggle_ac_mode
    type: esphome::climate::ClimateMode
    restore_value: yes