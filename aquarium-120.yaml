esphome:
  name: esp-aquarium-120
  platform: ESP8266
  board: nodemcuv2

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  password: !secret aquarium-120-ota-password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: 10.100.102.57
    gateway: 10.100.102.1
    subnet: 255.255.255.0
  # use_address: 10.100.102.159
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Aquarium-120 Fallback Hotspot"
    password: !secret aquarium-120-ap-password

captive_portal:

sensor:
  - platform: ntc
    sensor: resistance_sensor
    calibration:
      # b_constant: 3950
      - 1.1461kOhm -> 44.4°C
      - 1.7691kOhm -> 25.5°C
      - 3.1272kOhm -> 0°C
      #- 14.674kOhm -> 15°C
      # reference_temperature: 25°C
      # reference_resistance: 10kOhm
    name: NTC Temperature
    id: temperature_aquarium_120
  
  - platform: resistance
    id: resistance_sensor
    sensor: source_sensor
    configuration: DOWNSTREAM
    resistor: 10kOhm
    name: Resistance Sensor

  - platform: adc
    pin: A0
    id: source_sensor
    update_interval: never
    
  - platform: dht
    pin: D6
    temperature:
      name: "Temperature at entrance hall"
      id: temp_sensor_entrance
      filters:
        - lambda: return x -2;
    humidity:
      name: "Humidity at entrance hall"
      id: humidity_sensor_entrance
      filters:
        - lambda: return x - 5;

switch:
  - platform: gpio
    pin: D0
    id: ntc_vcc

interval:
  - interval: 60s
    then:
      - switch.turn_on: ntc_vcc
      - component.update: source_sensor
      - switch.turn_off: ntc_vcc
      
i2c:
  sda: D2
  scl: D1
  scan: True


time:
  - platform: homeassistant
    id: esptime

font:
  - file: 'arial.ttf'
    id: font1
    size: 48
  - file: 'arial.ttf'
    id: font2
    size: 14
  - file: 'arial.ttf'
    id: font3
    size: 18

animation:
  - file: "images/ac_cool.gif"
    id: ac_cool
  - file: "images/ac_auto.gif"
    id: ac_auto
  - file: "images/ac_dry.gif"
    id: ac_dry
  - file: "images/ac_fan.gif"
    id: ac_fan
  - file: "images/ac_heat.gif"
    id: ac_heat
  - file: "images/ac_heat_up.gif"
    id: ac_heat_up
  - file: "images/ac_cool_down.gif"
    id: ac_cool_down
image:
  - file: "images/ac_off.bmp"
    id: ac_off

display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x64"
    address: 0x3C

    lambda: |- 
      static int current_temperature;
      static int previous_temperature;
      static int animation_temperature_up = 0;
      static int animation_temperature_down = 0;
      current_temperature = round(id(temperature_aquarium_120).state);
      if (current_temperature > previous_temperature) animation_temperature_up = 1;
      if (current_temperature < previous_temperature) animation_temperature_down = 1;
      // ESP_LOGD("main", "\ncurrent_temperature: %d\nprevious temperature: %d\nanimation_temperature_up: %d\nanimation_temperature_down: %d\n", current_temperature, previous_temperature, animation_temperature_up, animation_temperature_down);
      // Print inside temperature (from homeassistant sensor)
      if (animation_temperature_up > 0) {
        it.image(64, 0, id(ac_heat_up));
        id(ac_heat_up).next_frame();
        animation_temperature_up++;
        animation_temperature_up = animation_temperature_up % 9;
      } else if (animation_temperature_down > 0) {
        it.image(64, 0, id(ac_cool_down));
        id(ac_cool_down).next_frame();
        animation_temperature_down++;
        animation_temperature_down = animation_temperature_down % 9;
      } else if (id(temperature_aquarium_120).has_state()) {
        it.printf(64, 18, id(font3), TextAlign::BASELINE_LEFT , "%.1f°C", id(temperature_aquarium_120).state);
      }
      // Print time
      it.strftime(0, 60, id(font1), TextAlign::BASELINE_LEFT, "%H:%M", id(esptime).now());
      previous_temperature = current_temperature;

binary_sensor:
  - platform: gpio
    pin: D5
    name: "PIR Door Hall"
    id: pir_door_hall
    device_class: motion